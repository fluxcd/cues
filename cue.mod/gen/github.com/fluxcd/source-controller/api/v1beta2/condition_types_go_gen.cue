// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/fluxcd/source-controller/api/v1beta2

package v1beta2

#SourceFinalizer: "finalizers.fluxcd.io"

// ArtifactInStorageCondition indicates the availability of the Artifact in
// the storage.
// If True, the Artifact is stored successfully.
// This Condition is only present on the resource if the Artifact is
// successfully stored.
#ArtifactInStorageCondition: "ArtifactInStorage"

// ArtifactOutdatedCondition indicates the current Artifact of the Source
// is outdated.
// This is a "negative polarity" or "abnormal-true" type, and is only
// present on the resource if it is True.
#ArtifactOutdatedCondition: "ArtifactOutdated"

// SourceVerifiedCondition indicates the integrity verification of the
// Source.
// If True, the integrity check succeeded. If False, it failed.
// This Condition is only present on the resource if the integrity check
// is enabled.
#SourceVerifiedCondition: "SourceVerified"

// FetchFailedCondition indicates a transient or persistent fetch failure
// of an upstream Source.
// If True, observations on the upstream Source revision may be impossible,
// and the Artifact available for the Source may be outdated.
// This is a "negative polarity" or "abnormal-true" type, and is only
// present on the resource if it is True.
#FetchFailedCondition: "FetchFailed"

// BuildFailedCondition indicates a transient or persistent build failure
// of a Source's Artifact.
// If True, the Source can be in an ArtifactOutdatedCondition.
// This is a "negative polarity" or "abnormal-true" type, and is only
// present on the resource if it is True.
#BuildFailedCondition: "BuildFailed"

// StorageOperationFailedCondition indicates a transient or persistent
// failure related to storage. If True, the reconciliation failed while
// performing some filesystem operation.
// This is a "negative polarity" or "abnormal-true" type, and is only
// present on the resource if it is True.
#StorageOperationFailedCondition: "StorageOperationFailed"

// URLInvalidReason signals that a given Source has an invalid URL.
#URLInvalidReason: "URLInvalid"

// AuthenticationFailedReason signals that a Secret does not have the
// required fields, or the provided credentials do not match.
#AuthenticationFailedReason: "AuthenticationFailed"

// DirCreationFailedReason signals a failure caused by a directory creation
// operation.
#DirCreationFailedReason: "DirectoryCreationFailed"

// StatOperationFailedReason signals a failure caused by a stat operation on
// a path.
#StatOperationFailedReason: "StatOperationFailed"

// ReadOperationFailedReason signals a failure caused by a read operation.
#ReadOperationFailedReason: "ReadOperationFailed"

// AcquireLockFailedReason signals a failure in acquiring lock.
#AcquireLockFailedReason: "AcquireLockFailed"

// InvalidPathReason signals a failure caused by an invalid path.
#InvalidPathReason: "InvalidPath"

// ArchiveOperationFailedReason signals a failure in archive operation.
#ArchiveOperationFailedReason: "ArchiveOperationFailed"

// SymlinkUpdateFailedReason signals a failure in updating a symlink.
#SymlinkUpdateFailedReason: "SymlinkUpdateFailed"

// ArtifactUpToDateReason signals that an existing Artifact is up-to-date
// with the Source.
#ArtifactUpToDateReason: "ArtifactUpToDate"

// CacheOperationFailedReason signals a failure in cache operation.
#CacheOperationFailedReason: "CacheOperationFailed"
