// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/fluxcd/notification-controller/api/v1beta1

package v1beta1

import (
	"github.com/fluxcd/pkg/apis/meta"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ReceiverSpec defines the desired state of Receiver
#ReceiverSpec: {
	// Type of webhook sender, used to determine
	// the validation procedure and payload deserialization.
	// +kubebuilder:validation:Enum=generic;generic-hmac;github;gitlab;bitbucket;harbor;dockerhub;quay;gcr;nexus;acr
	// +required
	type: string @go(Type)

	// A list of events to handle,
	// e.g. 'push' for GitHub or 'Push Hook' for GitLab.
	// +optional
	events: [...string] @go(Events,[]string)

	// A list of resources to be notified about changes.
	// +required
	resources: [...#CrossNamespaceObjectReference] @go(Resources,[]CrossNamespaceObjectReference)

	// Secret reference containing the token used
	// to validate the payload authenticity
	// +required
	secretRef?: meta.#LocalObjectReference @go(SecretRef)

	// This flag tells the controller to suspend subsequent events handling.
	// Defaults to false.
	// +optional
	suspend?: bool @go(Suspend)
}

// ReceiverStatus defines the observed state of Receiver
#ReceiverStatus: {
	// +optional
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)

	// Generated webhook URL in the format
	// of '/hook/sha256sum(token+name+namespace)'.
	// +optional
	url?: string @go(URL)

	// ObservedGeneration is the last observed generation.
	// +optional
	observedGeneration?: int64 @go(ObservedGeneration)
}

#GenericReceiver:     "generic"
#GenericHMACReceiver: "generic-hmac"
#GitHubReceiver:      "github"
#GitLabReceiver:      "gitlab"
#BitbucketReceiver:   "bitbucket"
#HarborReceiver:      "harbor"
#DockerHubReceiver:   "dockerhub"
#QuayReceiver:        "quay"
#GCRReceiver:         "gcr"
#NexusReceiver:       "nexus"
#ReceiverKind:        "Receiver"
#ACRReceiver:         "acr"

// Receiver is the Schema for the receivers API
#Receiver: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec?:     #ReceiverSpec      @go(Spec)

	// +kubebuilder:default:={"observedGeneration":-1}
	status?: #ReceiverStatus @go(Status)
}

// ReceiverList contains a list of Receiver
#ReceiverList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Receiver] @go(Items,[]Receiver)
}
