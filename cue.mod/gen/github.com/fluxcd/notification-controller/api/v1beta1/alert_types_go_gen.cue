// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/fluxcd/notification-controller/api/v1beta1

package v1beta1

import (
	"github.com/fluxcd/pkg/apis/meta"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AlertKind: "Alert"

// AlertSpec defines an alerting rule for events involving a list of objects
#AlertSpec: {
	// Send events using this provider.
	// +required
	providerRef: meta.#LocalObjectReference @go(ProviderRef)

	// Filter events based on severity, defaults to ('info').
	// If set to 'info' no events will be filtered.
	// +kubebuilder:validation:Enum=info;error
	// +kubebuilder:default:=info
	// +optional
	eventSeverity?: string @go(EventSeverity)

	// Filter events based on the involved objects.
	// +required
	eventSources: [...#CrossNamespaceObjectReference] @go(EventSources,[]CrossNamespaceObjectReference)

	// A list of Golang regular expressions to be used for excluding messages.
	// +optional
	exclusionList?: [...string] @go(ExclusionList,[]string)

	// Short description of the impact and affected cluster.
	// +optional
	summary?: string @go(Summary)

	// This flag tells the controller to suspend subsequent events dispatching.
	// Defaults to false.
	// +optional
	suspend?: bool @go(Suspend)
}

// AlertStatus defines the observed state of Alert
#AlertStatus: {
	// +optional
	conditions?: [...metav1.#Condition] @go(Conditions,[]metav1.Condition)

	// ObservedGeneration is the last observed generation.
	// +optional
	observedGeneration?: int64 @go(ObservedGeneration)
}

// Alert is the Schema for the alerts API
#Alert: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec?:     #AlertSpec         @go(Spec)

	// +kubebuilder:default:={"observedGeneration":-1}
	status?: #AlertStatus @go(Status)
}

// AlertList contains a list of Alert
#AlertList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#Alert] @go(Items,[]Alert)
}
